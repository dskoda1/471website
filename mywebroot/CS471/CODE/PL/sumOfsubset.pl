item(2).item(4).item(6).sumOfsubsetSlow(Sum,[N,Nx|T]):- item(N),                         SumNx is Sum - N,                         SumNx > 0,                         sumOfsubsetSlow(SumNx,[Nx|T]),                         N < Nx, not(member(N,T)).sumOfsubsetSlow(N,[N]):-item(N).itemr(1).itemr(2).itemr(3).itemr(4).itemr(5).itemr(6).itemr(7).itemr(8).itemr(9).itemr(10).sumSet(Sum,Set):-sumR(Sum,Set,-1). %every number less than 100sumR(Sum,[N|T],Lx):-     itemr(N),                          N > Lx,   %Unique Items in sorted order so dups                           SumNx is Sum - N,                         SumNx > 0,                         sumR(SumNx,T,N).sumR(N,[N],Lx):-itemr(N),N > Lx .% Using list and set representation.sumOfsubset([], 0, [ ]).sumOfsubset([N|TSet], Sum, [N|TSubSet]):-			Sumx is Sum - N, 			sumOfsubset(TSet,Sumx,TSubSet ) .sumOfsubset([N|TSet], Sum, SubSet):-				sumOfsubset(TSet,Sum,SubSet ).